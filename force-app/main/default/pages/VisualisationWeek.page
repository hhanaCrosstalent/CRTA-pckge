<apex:page sidebar="false" showHeader="false" cache="false" docType="html-5.0" standardStylesheets="false" applyHtmlTag="false" applyBodyTag="false" controller="VisualisationWeekController">
<apex:composition template="sirhTemplate">
<apex:define name="body">
  <div id="bottom-container">
    <div class="small-12 large-2 column">
      <!-- Time status -->
      <apex:outputPanel layout="block" id="timeStatusHour" styleClass="small-12 column info-block" html-data-fold="false">
        <h4 class="title secondary-font header">
          <a href="#" class="folder secondary-font" onclick="event.preventDefault(); fold('{!$Component.timeStatusHour}');">
              <i class="fa fa-clock-o"></i>
              <apex:outputPanel rendered="{!($CurrentPage.parameters.contactId == null || $CurrentPage.parameters.contactId == '') && !isManager}"> {!$Label.crta__planning_time_status}</apex:outputPanel>
              <apex:outputPanel rendered="{!$CurrentPage.parameters.contactId != null || ($CurrentPage.parameters.id != null && isManager)}"> {!employee.Name}</apex:outputPanel>
          </a>
        </h4>
        <div class="card">
          <div class="row infos" data-foldable="true">
            <div class="small-6 medium-3 large-12 column info">
              <div class="ct-label">
                {!$Label.Planning_period_duration} : 
                <span id="duration" class="ct-output">0h</span>
              </div>
            </div>
            <div class="small-6 medium-3 large-12 column info end">
              <div class="ct-label">
                {!$ObjectType.Contact.fields.Repos_compensateurs_solde__c.Label} : 
                <span class="ct-output"> {!employee.Repos_compensateurs_solde__c}</span>
              </div>
            </div>
          </div>
        </div>
      </apex:outputPanel>

      <!-- Legend -->
      <div id="legend" class="small-12 column info-block" data-fold="false">
        <h4 class="title secondary-font header">
          <a href="#" class="folder secondary-font" onclick="event.preventDefault(); fold('legend');">
            <i class="fa fa-info-circle"></i>
            <span>{!$Label.Planning_legend}</span>
          </a>
        </h4>
        <div class="card">
          <div class="row infos" data-foldable="true">
            <div class="small-6 medium-3 large-12 column info">
              <div class="ct-label">
                <i class="fa fa-lg fa-fw fa-briefcase"></i> :
                <span class="ct-output">{!$Label.Planning_legend_bowtie}</span>
              </div>
            </div>
            <div class="small-6 medium-3 large-12 column info">
              <div class="ct-label">
                <i class="fa fa-lg fa-fw fa-ticket"></i> :
                <span class="ct-output">{!$ObjectType.Demande_de_conges__c.LabelPlural}</span>
              </div>
            </div>
            <div class="small-6 medium-3 large-12 column info {!IF($Setup.crta__timesheet__c.crta__useConstraint__c, 'show', 'hide')}">
              <div class="ct-label">
                <i class="fa fa-lg fa-fw fa-chain"></i> :
                <span class="ct-output">{!$ObjectType.Astreinte__c.LabelPlural}</span>
              </div>
            </div>
            <div class="small-6 medium-3 large-12 column info">
              <div class="ct-label">
                <i class="fa fa-lg fa-fw fa-clock-o"></i> :
                <span class="ct-output">{!$Label.Planning_legend_clock}</span>
              </div>
            </div>
            <div class="small-6 medium-3 large-12 column info">
              <div class="ct-label">
                <i class="fa fa-lg fa-fw fa-check-circle"></i> :
                <span class="ct-output">{!$Label.Planning_legend_check}</span>
              </div>
            </div>
            <div class="small-6 medium-3 large-12 column info end">
              <div class="ct-label">
                <i class="fa fa-lg fa-fw fa-comment"></i> :
                <span class="ct-output">{!$Label.Planning_legend_comment}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Calendar -->
    <div class="small-12 medium-12 large-10 column">
      <div>
        <div id="calendar" class="custom-cal planning">
        </div>

        <input id="periodStart" type="hidden" name="periodStart" value="" />
        <input id="periodEnd" type="hidden" name="periodEnd" value="" />
      </div>
    </div>
  </div>

  <apex:form >
  <div class="modals">
    <!-- Modal time creation -->
    <div id="time-modal" class="row reveal-modal time-modal medium" data-reveal="true">
        <h3 class="small-12 title">{!$Label.new_time} (<time></time>)</h3>

        <div class="small-12">
          <div class="row">
            <div class="small-12 medium-6 column">
              <label>{!$ObjectType.Temps__c.fields.Type__c.Label}
                <apex:selectList id="type-select" value="{!selectedtimeType}" size="1" styleClass="type-select">
                    <apex:selectOptions value="{!timeTypes}"></apex:selectOptions>
                </apex:selectList>
              </label>
            </div>
            <div class="small-12 medium-6 column">
              <label>{!$ObjectType.Temps__c.fields.Heure_de_fin__c.Label}<input type="time" name="end" value="" class="end-select timepicker" required="required"/></label>
            </div>
          </div>
        </div>

        <input type="hidden" name="date" value="" class="start-select" />
        <input type="hidden" name="date" value="" class="date-select" />

        <a href="#" class="button green outline hide-for-print small-12 medium-3" onclick="event.preventDefault(); createTime('time-modal')"><i class="fa fa-plus"></i> {!$Label.create}</a>
        <a class="close-reveal-modal modal-dismiss hide-for-print"><i class="fa fa-minus"></i></a>
    </div>

    <!-- Modal datetime creation -->
    <div id="time-start-modal" class="row reveal-modal time-modal medium" data-reveal="true">
        <h3 class="small-12 title">{!$Label.new_time}</h3>

        <div class="small-12">
          <div class="row">
            <div class="small-6 medium-4 column">
              <label>{!$ObjectType.Temps__c.fields.Date__c.Label}<input type="date" name="date" value="" class="date-select datepicker" required="required"/></label>
            </div>
            <div class="small-3 medium-2 column">
              <label>{!$ObjectType.Temps__c.fields.Heure_de_debut__c.Label}<input type="time" name="start" value="" class="start-select timepicker" required="required"/></label>
            </div>
            <div class="small-3 medium-2 column">
              <label>{!$ObjectType.Temps__c.fields.Heure_de_fin__c.Label}<input type="time" name="end" value="" class="end-select timepicker" required="required"/></label>
            </div>
            <div class="small-12 medium-4 column">
              <label>{!$ObjectType.Temps__c.fields.Type__c.Label}
                <apex:selectList id="type-select1" value="{!selectedtimeType}" size="1" styleClass="type-select">
                    <apex:selectOptions value="{!timeTypes}"></apex:selectOptions>
                </apex:selectList>
              </label>
            </div>
          </div>
        </div>

        <a href="#" class="button green outline hide-for-print small-12 medium-3" onclick="event.preventDefault(); createTime('time-start-modal')"><i class="fa fa-plus"></i> {!$Label.create}</a>
        <a class="close-reveal-modal modal-dismiss hide-for-print"><i class="fa fa-minus"></i></a>
    </div>

    <!-- Modal time edition -->
    <div id="time-edit-modal" class="row reveal-modal time-modal medium" data-reveal="true">
        <h3 class="small-12 title">{!$Label.edit_time}</h3>

        <div class="small-12">
          <div class="row">
            <div class="small-12 medium-4 column">
              <label>{!$ObjectType.Temps__c.fields.Heure_de_debut__c.Label}<input type="time" name="end" value="" class="start-select timepicker" required="required"/></label>
            </div>
            <div class="small-12 medium-4 column">
              <label>{!$ObjectType.Temps__c.fields.Type__c.Label}
                <apex:selectList id="type-select2" value="{!selectedtimeType}" size="1" styleClass="type-select">
                    <apex:selectOptions value="{!timeTypes}"></apex:selectOptions>
                </apex:selectList>
              </label>
            </div>
            <div class="small-12 medium-4 column">
              <label>{!$ObjectType.Temps__c.fields.Heure_de_fin__c.Label}<input type="time" name="end" value="" class="end-select timepicker" required="required"/></label>
            </div>
          </div>
        </div>

        <input type="hidden" name="id" value="" class="id-select" />
        <input type="hidden" name="date" value="" class="date-select" />

        <a href="#" class="button green outline hide-for-print small-12 medium-3" onclick="event.preventDefault(); editTime()"><i class="fa fa-save"></i> {!$Label.update}</a>
        <a href="#" class="button red outline hide-for-print small-12 medium-3" onclick="event.preventDefault(); deleteTime('time-edit-modal')"><i class="fa fa-minus-circle"></i> {!$Label.delete}</a>
        <a class="close-reveal-modal modal-dismiss hide-for-print"><i class="fa fa-minus"></i></a>
    </div>

    <!-- Modal planning comment -->
    <apex:outputPanel layout="block" rendered="{!isManager}">
      <div id="timesheet-valid-modal" class="row reveal-modal date-modal small" data-reveal="true">
          <h3 class="small-12 title">{!$Label.New_comment}</h3>

          <div class="small-12">
            <textarea></textarea>
          </div>

          <a href="#" class="button green outline hide-for-print small-12 medium-3" onclick=""><i class="fa fa-save"></i> {!$Label.update}</a>
          <a class="close-reveal-modal modal-dismiss hide-for-print"><i class="fa fa-minus"></i></a>
      </div>
    </apex:outputPanel>

    <!-- Modal pause creation -->
    <div id="pause-modal" class="row reveal-modal small" data-reveal="true">
        <h3 class="small-12 title">{!$Label.Planning_button_add_pause}</h3>

        <div class="small-12">
          <div class="row">
            <div class="small-6 column">
              <label>{!$ObjectType.Pause__c.fields.Date__c.Label}<input type="date" name="date" value="" class="date-select datepicker" required="required"/></label>
            </div>
            <div class="small-6 column">
              <label>{!$ObjectType.Pause__c.fields.Duree__c.Label}<input type="number" name="number" value="" class="duration-select" required="required"/></label>
            </div>
          </div>
        </div>

        <a href="#" class="button green outline" onclick="event.preventDefault(); createPause()"><i class="fa fa-plus"></i> {!$Label.create}</a>
        <a class="close-reveal-modal modal-dismiss hide-for-print"><i class="fa fa-minus"></i></a>
    </div>

    <!-- Modal pauses list -->
    <div id="pause-list-modal" class="row reveal-modal pause-modal tiny" data-reveal="true">
        <h3 class="small-12 title">{!$ObjectType.Pause__c.LabelPlural}</h3>

        <ul class="no-bullet pause-list">
        </ul>

        <a class="close-reveal-modal modal-dismiss hide-for-print"><i class="fa fa-minus"></i></a>
    </div>
  </div>
  </apex:form>

  <apex:includeScript value="{!URLFOR($Resource.fullcalendar, 'fullcalendar/fullcalendar.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.fullcalendar, 'fullcalendar/lang-all.js')}" />
  <script type="text/javascript">
    jQuery(document).ready(function($) {
      jQuery('#calendar').fullCalendar({
        lang: '{!locale}',
        customButtons: {
          addTime: {
            text: '{!$Label.Scheduler_button_add_time}',
            title: '{!$Label.Scheduler_button_add_time}',
            icon: ' fa fa-calendar-plus-o hide-for-small',
            click: function() {
              jQuery('#time-start-modal').foundation('reveal', 'open');
            }
          },
          addPause: {
            text: '{!$Label.Planning_button_add_pause}',
            title: '{!$Label.Planning_button_add_pause}',
            icon: ' fa fa-pause hide-for-small',
            click: function() {
              jQuery('#pause-modal').foundation('reveal', 'open');
            }
          },
          viewPause: {
            text: '{!$Label.Planning_button_view_pause}',
            title: '{!$Label.Planning_button_view_pause}',
            icon: ' fa fa-pause-circle-o hide-for-small',
            click: function() {
              loadPauses();
            }
          },
          askValidation: {
            text: '{!$Label.Planning_button_ask_validation}',
            title: '{!$Label.Planning_button_ask_validation}',
            icon: ' fa fa-calendar-check-o green-font hide-for-small',
            click: function() {
              jQuery(this).find('span').removeClass('fa-calendar-check-o').addClass('fa-spin fa-spinner');
              validatePlanning();
            }
          },
          accept: {
            text: '{!$Label.Planning_button_accept}',
            title: '{!$Label.Planning_button_accept}',
            icon: ' fa fa-calendar-check-o green-font hide-for-small',
            click: function() {
              jQuery('#timesheet-valid-modal .green.button').attr('onclick', 'event.preventDefault(); acceptPlanning()');
              jQuery('#timesheet-valid-modal .green.button').html('{!$Label.Planning_button_accept}');
              jQuery('#timesheet-valid-modal').foundation('reveal', 'open');
            }
          },
          reject: {
            text: '{!$Label.Planning_button_reject}',
            title: '{!$Label.Planning_button_reject}',
            icon: ' fa fa-calendar-times-o red-font hide-for-small',
            click: function() {
              jQuery('#timesheet-valid-modal .green.button').attr('onclick', 'event.preventDefault(); rejectPlanning()');
              jQuery('#timesheet-valid-modal .green.button').html('{!$Label.Planning_button_reject}');
              jQuery('#timesheet-valid-modal').foundation('reveal', 'open');
            }
          }
        },
        header: {
          left: 'prev,next,addTime,{!IF($Setup.crta__timesheet__c.crta__usePause__c, "addPause viewPause", "")} {!IF(isManager, "accept,reject", "askValidation")}',
          center: 'title',
          right: 'month,agendaWeek,agendaDay,today'
        },
        defaultView: "{!IF(week.Id != null, 'agendaWeek', 'month')}",
        displayEventTime: true,
        defaultDate: moment({!IF(weekStart != null, weekStart, "")}),
        slotLabelFormat: 'LT',
        timeFormat: 'LT',
        fixedWeekCount: false,
        eventSources: [
          { //Times
            events: function(start, end, timezone, callback) {
              sforce.connection.sessionId = '{!$Api.Session_ID}';
              var result = sforce.apex.execute(NSD+'TimeRepository', 'getAllByContactBetweenDate', {
                contactId: '{!employee.Id}',
                startDate: start.toISOString(),
                endDate: end.toISOString()
              }, {
                onSuccess: function (result) {
                  var events = [];
                  jQuery.each(result, function(index, val) {
                    var start = moment.utc(jQuery(this).attr(NSU+'Date__c')).add({h: jQuery(this).attr(NSU+'Heure_de_debut__c').substring(0,2), m: jQuery(this).attr(NSU+'Heure_de_debut__c').substring(3,5)});
                    var end = moment.utc(jQuery(this).attr(NSU+'Date__c')).add({h: jQuery(this).attr(NSU+'Heure_de_fin__c').substring(0,2), m: jQuery(this).attr(NSU+'Heure_de_fin__c').substring(3,5)});
                    
                    var className = 'week-event';
                    if(end.isBefore(moment())) className += ' past';
                    var editable = false;

                    //Icon choice
                    var typeNumber = val[NSU+'Valeur_type__c'];
                    var fa ='';
                    if(typeNumber >= 10 && typeNumber < 15) {
                      fa = '<i class="fa fa-lg fa-briefcase" title="'+val[NSU+'Type__c']+'"></i> ';
                    } else if(typeNumber >= 15 && typeNumber < 20) {
                      fa = '<i class="fa fa-lg fa-users" title="'+val[NSU+'Type__c']+'"></i> ';
                    } else if(typeNumber >= 20 && typeNumber < 30) {
                      fa = '<i class="fa fa-lg fa-pause-circle" title="'+val[NSU+'Type__c']+'"></i> ';
                    } else if(typeNumber >= 30 && typeNumber < 50) {
                      fa = '<i class="fa fa-lg fa-calendar-minus-o red-font" title="'+val[NSU+'Type__c']+'"></i> ';
                    } else if(typeNumber >= 50 && typeNumber < 70) {
                      fa = '<i class="fa fa-lg fa-clock-o blue-font" title="'+val[NSU+'Type__c']+'"></i> ';
                    } else if(typeNumber >= 70 && typeNumber < 90) {
                      fa = '<i class="fa fa-lg fa-chain purple-font" title="'+val[NSU+'Type__c']+'"></i> ';
                    }
                    if(val[NSU+'Valeur_statut__c'] < 20) {
                      className += ' editable';
                      editable = true;
                    } else if(val[NSU+'Valeur_statut__c'] >= 20 && val[NSU+'Valeur_statut__c'] < 90) {
                      fa += '<i class="fa fa-lg fa-clock-o" title="'+val[NSU+'Statut__c']+'"></i> ';
                    } else if(val[NSU+'Valeur_statut__c'] >= 90) {
                      fa += '<i class="fa fa-lg fa-check-circle" title="'+val[NSU+'Statut__c']+'"></i> ';
                      className += ' validated';
                    }
                    if(val[NSU+'Commentaire__c']) {
                      fa += '<i class="fa fa-lg fa-comment" title="'+val[NSU+'Commentaire__c']+'"></i> ';
                    }

                    events.push({
                      id: val.Id,
                      start: start,
                      end: end,
                      editable: editable,
                      title: fa+val[NSU+'Type__c'],
                      className: className,
                      type: val[NSU+'Valeur_type__c']+' '+val[NSU+'Type_text__c']
                    });
                  });
                  callback(events);
                }, 
                onFailure: function (error) {
                  console.log(error);
                }
              }); 
            }
          },
          { //Constraints
            events: function(start, end, timezone, callback) {
              sforce.connection.sessionId = '{!$Api.Session_ID}';
              var result = sforce.apex.execute(NSD+'ConstraintRepository', 'getAllByContactBetweenDates', {
                contactId: '{!employee.Id}',
                startDate: start.toISOString(),
                endDate: end.toISOString()
              }, {
                onSuccess: function (result) {
                  var events = [];
                  jQuery.each(result, function(index, val) {
                    var start = moment(val[NSU+'Date_de_debut__c']);
                    var end = moment(val[NSU+'Date_de_fin__c']);
                    end = end.add(1, 'days');
                    
                    var className = 'constraint-event';
                    if(end.isBefore(moment())) className += ' past';
                    
                    events.push({
                      id: val.Id,
                      start: start,
                      end: end,
                      title: '<i class="fa fa-chain"></i> '+val[NSU+'Motif__c'],
                      className: className
                    });
                  });
                  callback(events);
                }, 
                onFailure: function (error) {
                  console.log(error);
                }
              }); 
            }, 
            allDayDefault: true
          },
          { //Leave requests
            events: function(start, end, timezone, callback) {
              sforce.connection.sessionId = '{!$Api.Session_ID}';
              var result = sforce.apex.execute(NSD+'LeaveRepository', 'getAllByContactBetweenDate', {
                contactId: '{!employee.Id}',
                startDate: start.toISOString(),
                endDate: end.toISOString()
              }, {
                onSuccess: function (result) {
                  var events = [];
                  jQuery.each(result, function(index, val) {
                    var start = moment(val[NSU+'Date_de_debut__c']);
                    var end = moment(val[NSU+'Date_de_fin__c']);

                    var className = 'leave-event';
                    if(end.isBefore(moment())) className += ' past';

                    var fa = '<i class="fa fa-lg fa-ticket" title="'+val[NSU+'Type__c']+'"></i> ';
                    if(val[NSU+'Valeur_statut__c'] < 30) fa += '<i class="fa fa-lg fa-clock-o" title="'+val[NSU+'Statut__c']+'"></i> ';
                    if((val[NSU+'Valeur_statut__c'] >= 30 && val[NSU+'Valeur_statut__c'] < 50) || val[NSU+'Valeur_statut__c'] >= 70) {
                          fa += '<i class="fa fa-lg fa-check-circle" title="'+val[NSU+'Statut__c']+'"></i> ';
                          className += ' validated';
                    }
                    var allDay = false;
                    // any better idea?!
                    if(val[NSU+'Periode_de_fin__c'] == 'Journée complète' 
                        || val[NSU+'Periode_de_fin__c'] == 'Full day' 
                        || val[NSU+'Periode_de_fin__c'] == 'Jornada completa') {
                        allDay = true;
                        end = end.startOf('day').add(1, 'day');
                    }
                    events.push({
                      id: val.Id,
                      start: start,
                      end: end,
                      allDay: allDay,
                      title: fa+val[NSU+'Type__c'],
                      className: className
                    });
                  });
                  callback(events);
                }, 
                onFailure: function (error) {
                  console.log(error);
                }
              }); 
            }
          }
        ],
        viewRender: function( view, element ) {
          jQuery('#periodStart').val(view.intervalStart.format('YYYY-MM-DD'));
          jQuery('#periodEnd').val(view.intervalEnd.format('YYYY-MM-DD'));
          jQuery('#calendar .fc-addTime-button').attr('title', '{!$Label.Scheduler_button_add_time}');
          jQuery('#calendar .fc-askValidation-button').attr('title', '{!$Label.Planning_button_ask_validation}');
          jQuery('#calendar .fc-accept-button').attr('title', '{!$Label.Planning_button_accept}');
          jQuery('#calendar .fc-reject-button').attr('title', '{!$Label.Planning_button_reject}');
        },
        eventAfterRender: function( event, element, view ) { 
          element.find('.fc-title').html(event.title); 
          element.find('.fc-content').attr('title', event.description); 
          element.find('.fc-content').attr('data-type', event.type); 
          element.find('.fc-content').attr('data-id', event.id); 
        },
        eventAfterAllRender: function(view) {
          countTimeDuration(view);
        },
        eventClick: function(calEvent, jsEvent, view) {
          if(calEvent.className[0] == 'week-event' && calEvent.editable == true) {
            jQuery('#time-edit-modal .date-select').val(calEvent.start.format('YYYY-MM-DD'));
            jQuery('#time-edit-modal .start-select').val(calEvent.start.format('HH:mm'));
            jQuery('#time-edit-modal .end-select').val(calEvent.end.format('HH:mm'));
            jQuery('#time-edit-modal .id-select').val(calEvent.id);
            jQuery('#time-edit-modal .type-select option').each(function(index, el) {
              if(jQuery(this).val() == calEvent.type) {
                jQuery(this).prop('selected', true);
              } else {
                jQuery(this).prop('selected', false);
              }
            });
            jQuery('#time-edit-modal').foundation('reveal', 'open');
          } 
        },
        dayClick: function(date, jsEvent, view) {
          jQuery('#time-modal time').html(date.format('LT'));
          jQuery('#time-modal .date-select').val(date.format('YYYY-MM-DD'));
          jQuery('#time-modal .start-select').val(date.format('HH:mm'));
          jQuery('#time-modal .end-select').val('');
          jQuery('#time-modal .end-select').attr('min', date.format('HH:mm'));
          jQuery('#time-modal').foundation('reveal', 'open');
        },
        eventResize: function(event, delta, revertFunc) {
          var date = event.start.format('YYYY-MM-DD');
          var start = event.start.format('HH:mm');
          var end = event.end.format('HH:mm');
          var id = event.id;
          var type = event.type;
          sforce.connection.sessionId = '{!$Api.Session_ID}';
          var result = sforce.apex.execute(NSD+'TimeManager', 'editWithTime', {
            startDate: date,
            startTime: start,
            endTime: end,
            type: type,
            timeId: id
          }, {
            onSuccess: function (result) {
              if (result != 'success') {
                console.log(result);
                jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
                jQuery(document).foundation('alert', 'reflow');
                revertFunc();
              }
            },
            onFailure: function (error) {
              console.log(error);
              jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown}<strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
              jQuery(document).foundation('alert', 'reflow');
              revertFunc();
            }
          });
        },
        eventDrop: function(event, delta, revertFunc) {
          var date = event.start.format('YYYY-MM-DD');
          var start = event.start.format('HH:mm');
          var end = event.end.format('HH:mm');
          var id = event.id;
          var type = event.type;
          sforce.connection.sessionId = '{!$Api.Session_ID}';
          var result = sforce.apex.execute(NSD+'TimeManager', 'editWithTime', {
            startDate: date,
            startTime: start,
            endTime: end,
            type: type,
            timeId: id
          }, {
            onSuccess: function (result) {
              if (result != 'success') {
                console.log(result);
                jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
                jQuery(document).foundation('alert', 'reflow');
                revertFunc();
              }
            },
            onFailure: function (error) {
              console.log(error);
              jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown}<strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
              jQuery(document).foundation('alert', 'reflow');
              revertFunc();
            }
          });
        }
      });
      
      //Allows the edition of a pause line
      jQuery('#pause-list-modal .pause-list').on('click', 'i.fa-edit', function(event) {
        event.preventDefault();
        jQuery(this).removeClass('fa-edit').addClass('fa-check green-font');
        jQuery(this).siblings('.fa-minus-circle').removeClass('fa-minus-circle').addClass('fa-times');
        var parent = jQuery(this).parents('li');
        parent.find('.date').prop('contenteditable', true);
        parent.find('.duration').prop('contenteditable', true);
      });

      //Deletes a pause on click
      jQuery('#pause-list-modal .pause-list').on('click', 'i.fa-minus-circle', function(event) {
        event.preventDefault();
        jQuery(this).removeClass('fa-times').addClass('fa-spin fa-spinner');
        jQuery(this).siblings('.fa-edit').hide();
        var parent = jQuery(this).parents('li');
        var id = parent.attr('data-id');
        sforce.connection.sessionId = '{!$Api.Session_ID}';
        var result = sforce.apex.execute(NSD+'PauseManager', 'deletePause', {
          pauseId: id
        }, {
          onSuccess: function (result) {
            if (result == 'success') {
              jQuery('#calendar').fullCalendar('refetchEvents');
            } else {
              console.log(result);
              jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
              jQuery(document).foundation('alert', 'reflow');
            }
            jQuery('#pause-list-modal').foundation('reveal', 'close');
          },
          onFailure: function (error) {
            console.log(error);
            jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
            jQuery(document).foundation('alert', 'reflow');
            jQuery('#pause-list-modal').foundation('reveal', 'close');
          }
        });
      });

      //Saves a pause on click
      jQuery('#pause-list-modal .pause-list').on('click', 'i.fa-check', function(event) {
        event.preventDefault();
        jQuery(this).removeClass('fa-check').addClass('fa-spin fa-spinner');
        jQuery(this).siblings('.fa-minus-circle').removeClass('fa-minus-circle').addClass('fa-times');
        var parent = jQuery(this).parents('li');
        var id = parent.attr('data-id');
        var date = moment(parent.find('.date').html(), 'L').format('YYYY-MM-DD');
        var duration = parent.find('.duration').html();
        sforce.connection.sessionId = '{!$Api.Session_ID}';
        var result = sforce.apex.execute(NSD+'PauseManager', 'editPause', {
          startDate: date,
          duration: duration,
          pauseId: id
        }, {
          onSuccess: function (result) {
            if (result == 'success') {
              jQuery('#calendar').fullCalendar('refetchEvents');
            } else {
              console.log(result);
              jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
              jQuery(document).foundation('alert', 'reflow');
            }
            jQuery('#pause-list-modal').foundation('reveal', 'close');
          },
          onFailure: function (error) {
            console.log(error);
            jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
            jQuery(document).foundation('alert', 'reflow');
          }
        });
      });

      //Reverts the editable pause line to an inert state
      jQuery('#pause-list-modal .pause-list').on('click', 'i.fa-times', function(event) {
        var parent = jQuery(this).parents('li');
        parent.find('.date').prop('contenteditable', false);
        parent.find('.duration').prop('contenteditable', false);
        jQuery(this).removeClass('fa-times').addClass('fa-minus-circle');
        jQuery(this).siblings('.fa-check').removeClass('fa-check green-font').addClass('fa-edit');
      });
    });

    function createTime(id) {
      jQuery('#'+id+' .green.button').html('<i class="fa fa-spin fa-spinner"></i>');
      var date;
      if(id == 'time-start-modal') {
        if (!Modernizr.inputtypes.date) {
          date = moment(jQuery('#'+id+' .date-select')[0].value, 'DD/MM/YYYY').format('YYYY-MM-DD');
        } else {
          date = moment(jQuery('#'+id+' .date-select')[0].value, 'YYYY-MM-DD').format('YYYY-MM-DD');
        }
      } else {
        date = jQuery('#'+id+' .date-select')[0].value;
      }
      var start = jQuery('#'+id+' .start-select')[0];
      var end = jQuery('#'+id+' .end-select')[0];
      var type = jQuery('#'+id+' .type-select')[0];
      sforce.connection.sessionId = '{!$Api.Session_ID}';
      var result = sforce.apex.execute(NSD+'TimeManager', 'createWithTime', {
        startDate: date,
        startTime: start.value,
        endTime: end.value,
        type: type.value,
        contactId: '{!employee.Id}'
      }, {
        onSuccess: function (result) {
          if (result == 'success') {
            jQuery('#calendar').fullCalendar('refetchEvents');
          } else {
            console.log(result);
            jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
            jQuery(document).foundation('alert', 'reflow');
          }
          jQuery('#'+id).foundation('reveal', 'close');
          jQuery('#'+id+' .green.button').html('<i class="fa fa-plus"></i> {!$Label.create}');
        },
        onFailure: function (error) {
          console.log(error);
          jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
          jQuery(document).foundation('alert', 'reflow');
          jQuery('#'+id).foundation('reveal', 'close');
          jQuery('#'+id+' .green.button').html('<i class="fa fa-plus"></i> {!$Label.create}');
        }
      });
    }

    function editTime() {
      jQuery('#time-edit-modal .green.button').html('<i class="fa fa-spin fa-spinner"></i>');
      var date = jQuery('#time-edit-modal .date-select')[0];
      var start = jQuery('#time-edit-modal .start-select')[0];
      var end = jQuery('#time-edit-modal .end-select')[0];
      var type = jQuery('#time-edit-modal .type-select')[0];
      var id = jQuery('#time-edit-modal .id-select')[0];
      sforce.connection.sessionId = '{!$Api.Session_ID}';
      var result = sforce.apex.execute(NSD+'TimeManager', 'editWithTime', {
        startDate: date.value,
        startTime: start.value,
        endTime: end.value,
        type: type.value,
        timeId: id.value
      }, {
        onSuccess: function (result) {
          if (result == 'success') {
            jQuery('#calendar').fullCalendar('refetchEvents');
          } else {
            console.log(result);
            jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
            jQuery(document).foundation('alert', 'reflow');
          }
          jQuery('#time-edit-modal').foundation('reveal', 'close');
          jQuery('#time-edit-modal .green.button').html('<i class="fa fa-save"></i> {!$Label.update}');
        },
        onFailure: function (error) {
          console.log(error);
          jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
          jQuery(document).foundation('alert', 'reflow');
          jQuery('#time-edit-modal').foundation('reveal', 'close');
          jQuery('#time-edit-modal .green.button').html('<i class="fa fa-save"></i> {!$Label.update}');
        }
      });
    }

    function deleteTime(id) {
      if(confirm('{!$Label.Planning_prompt_delete_time}')) {
        jQuery('#'+id+' .red.button').html('<i class="fa fa-spin fa-spinner"></i>');
        var eventId = jQuery('#'+id+' .id-select')[0];
        sforce.connection.sessionId = '{!$Api.Session_ID}';
        var result = sforce.apex.execute(NSD+'TimeManager', 'deleteTime', {
          timeId: eventId.value
        }, {
          onSuccess: function (result) {
            if (result == 'success') {
              jQuery('#calendar').fullCalendar('refetchEvents');
            } else {
              console.log(result);
              jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
              jQuery(document).foundation('alert', 'reflow');
            }
            jQuery('#'+id).foundation('reveal', 'close');
            jQuery('#'+id+' .red.button').html('<i class="fa fa-minus-circle"></i> {!$Label.delete}');
          },
          onFailure: function (error) {
            console.log(error);
            jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
            jQuery(document).foundation('alert', 'reflow');
            jQuery('#'+id).foundation('reveal', 'close');
            jQuery('#'+id+' .red.button').html('<i class="fa fa-minus-circle"></i> {!$Label.delete}');
          }
        });
      }
    }

    function createPause() {
      jQuery('#pause-modal .green.button').html('<i class="fa fa-spin fa-spinner"></i>');
      var date;
      if (!Modernizr.inputtypes.date) {
        date = moment(jQuery('#pause-modal .date-select')[0].value, 'DD/MM/YYYY').format('YYYY-MM-DD');
      } else {
        date = moment(jQuery('#pause-modal .date-select')[0].value, 'YYYY-MM-DD').format('YYYY-MM-DD');
      }
      var duration = jQuery('#pause-modal .duration-select')[0];
      sforce.connection.sessionId = '{!$Api.Session_ID}';
      var result = sforce.apex.execute(NSD+'PauseManager', 'createPause', {
        startDate: date,
        duration: duration.value,
        contactId: '{!employee.Id}'
      }, {
        onSuccess: function (result) {
          if (result == 'success') {
            jQuery('#calendar').fullCalendar('refetchEvents');
          } else {
            console.log(result);
            jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
            jQuery(document).foundation('alert', 'reflow');
          }
          jQuery('#pause-modal').foundation('reveal', 'close');
          jQuery('#pause-modal .green.button').html('<i class="fa fa-plus"></i> {!$Label.create}');
        },
        onFailure: function (error) {
          console.log(error);
          jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
          jQuery(document).foundation('alert', 'reflow');
          jQuery('#pause-modal').foundation('reveal', 'close');
          jQuery('#pause-modal .green.button').html('<i class="fa fa-plus"></i> {!$Label.create}');
        }
      });
    }

    function loadPauses() {
      var view = jQuery('#calendar').fullCalendar('getView');
      var start = view.start;
      var end = view.end;
      jQuery('#pause-list-modal .pause-list').html('');
      sforce.connection.sessionId = '{!$Api.Session_ID}';
      var result = sforce.apex.execute(NSD+'PauseRepository', 'getAllByContactAndWeekOrDate', {
        contactId: '{!employee.Id}',
        timesheetId: '{!JSENCODE(weekId)}',
        startDate: start.toISOString(),
        endDate: end.toISOString()
      }, {
        onSuccess: function (result) {
          jQuery.each(result, function(index, el) {
            jQuery('#pause-list-modal .pause-list').append('<li data-id="'+el.Id+'" data-date="'+el[NSU+'Date__c']+'" data-duration="'+el[NSU+'Duree__c']+'"><span class="date">'+moment(el[NSU+'Date__c']).format('L')+'</span> - <span class="duration">'+el[NSU+'Duree__c']+'</span>min <span class="end"><i class="fa fa-edit"></i><i class="fa fa-minus-circle red-font"></i></span></li>');
          });
          jQuery('#pause-list-modal').foundation('reveal', 'open');
        },
        onFailure: function (error) {
          console.log(event);
          jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+event.message+'</strong></span><a href="#" class="close">&otimes;</a></div>');
          jQuery(document).foundation('alert', 'reflow');
        }
      });
    }

    function validatePlanning() {
      var view = jQuery('#calendar').fullCalendar('getView');
      var start = view.start.format('YYYY-MM-DD');
      var end = view.end.format('YYYY-MM-DD');
      sforce.connection.sessionId = '{!$Api.Session_ID}';
      var result = sforce.apex.execute(NSD+'TimesheetManager', 'validateTimesheet', {
        startDate: start,
        endDate: end,
        contactId: '{!employee.Id}'
      }, {
        onSuccess: function (result) {
          if (result == 'success') {
            if({!JSENCODE(IF($Setup.sirh__c.useBrowserNotifications__c, "true", "false"))}) {
              body = '{!$Label.SI_Notif_week_validation}';
              Push.create('{!$Organization.Name}', {
                body: body.replace('{0}', start).replace('{1}', end),
                icon: {
                  x16: '{!$Resource.temps}',
                  x32: '{!$Resource.temps}'
                }
              });
            }
            jQuery('#calendar').fullCalendar('refetchEvents');
          } else {
            console.log(result);
            jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
            jQuery(document).foundation('alert', 'reflow');
          }
          jQuery('.fc-askValidation-button span').removeClass('fa-spin fa-spinner').addClass('fa-calendar-check-o');
        },
        onFailure: function (error) {
          console.log(error);
          jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
          jQuery(document).foundation('alert', 'reflow');
          jQuery('.fc-askValidation-button span').removeClass('fa-spin fa-spinner').addClass('fa-calendar-check-o');
        }
      });
    }

    function acceptPlanning() {
      jQuery('#timesheet-valid-modal .green.button').html('<i class="fa fa-spinner fa-spin"></i>');
      var comment = jQuery('#timesheet-valid-modal textarea')[0];
      var view = jQuery('#calendar').fullCalendar('getView');
      var start = view.start.format('YYYY-MM-DD');
      var end = view.end.format('YYYY-MM-DD');
      sforce.connection.sessionId = '{!$Api.Session_ID}';
      var result = sforce.apex.execute(NSD+'TimesheetManager', 'acceptTimesheet', {
        startDate: start,
        endDate: end,
        comment: comment.value,
        contactId: '{!employee.Id}'
      }, {
        onSuccess: function (result) {
          if (result == 'success') {
            if({!JSENCODE(IF($Setup.sirh__c.useBrowserNotifications__c, "true", "false"))}) {
              body = '{!$Label.SI_Notif_week_accept_manager}';
              Push.create('{!$Organization.Name}', {
                body: body.replace('{0}', start).replace('{1}', end).replace('{2}', '{!JSENCODE(employee.Name)}'),
                icon: {
                  x16: '{!$Resource.temps}',
                  x32: '{!$Resource.temps}'
                }
              });
            }
            jQuery('#calendar').fullCalendar('refetchEvents');
          } else {
            console.log(result);
            jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
            jQuery(document).foundation('alert', 'reflow');
          }
          jQuery('#timesheet-valid-modal .green.button').html('{!$Label.Planning_button_accept}');
          jQuery('#timesheet-valid-modal').foundation('reveal' ,'close');
        },
        onFailure: function (error) {
          console.log(error);
          jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
          jQuery(document).foundation('alert', 'reflow');
          jQuery('#timesheet-valid-modal .green.button').html('{!$Label.Planning_button_accept}');
          jQuery('#timesheet-valid-modal').foundation('reveal' ,'close');
        }
      });
    }

    function rejectPlanning() {
      jQuery('#timesheet-valid-modal .green.button').html('<i class="fa fa-spinner fa-spin"></i>');
      var comment = jQuery('#timesheet-valid-modal textarea')[0];
      var view = jQuery('#calendar').fullCalendar('getView');
      var start = view.start.format('YYYY-MM-DD');
      var end = view.end.format('YYYY-MM-DD');
      sforce.connection.sessionId = '{!$Api.Session_ID}';
      var result = sforce.apex.execute(NSD+'TimesheetManager', 'rejectTimesheet', {
        startDate: start,
        endDate: end,
        comment: comment.value,
        contactId: '{!employee.Id}'
      }, {
        onSuccess: function (result) {
          if (result == 'success') {
            if({!JSENCODE(IF($Setup.sirh__c.useBrowserNotifications__c, "true", "false"))}) {
              body = '{!$Label.SI_Notif_week_reject_manager}';
              Push.create('{!$Organization.Name}', {
                body: body.replace('{0}', start).replace('{1}', end).replace('{2}', '{!JSENCODE(employee.Name)}'),
                icon: {
                  x16: '{!$Resource.temps}',
                  x32: '{!$Resource.temps}'
                }
              });
            }
            jQuery('#calendar').fullCalendar('refetchEvents');
          } else {
            console.log(result);
            jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>'+result+'</span><a href="#" class="close">&otimes;</a></div>');
            jQuery(document).foundation('alert', 'reflow');
          }
          jQuery('#timesheet-valid-modal .green.button').html('{!$Label.Planning_button_accept}');
          jQuery('#timesheet-valid-modal').foundation('reveal' ,'close');
        },
        onFailure: function (error) {
          console.log(error);
          jQuery('#alert-messages').append('<div class="alert-box alert small-12 small-centered column" data-alert="true"><span>{!$Label.SIRH_error_unknown} <strong>'+error+'</strong></span><a href="#" class="close">&otimes;</a></div>');
          jQuery(document).foundation('alert', 'reflow');
          jQuery('#timesheet-valid-modal .green.button').html('{!$Label.Planning_button_accept}');
          jQuery('#timesheet-valid-modal').foundation('reveal' ,'close');
        }
      });
    }

    function countTimeDuration(view) {
      var eventDuration = 0;
      var start = view.intervalStart;
      var end   = view.intervalEnd;
      var events = $('#calendar').fullCalendar('clientEvents');
      for(e in events) {
        // this is our event filter
        if (events[e].index == 'times' && events[e].start >= start && events[e].end <= end) {
          eventDuration += moment.duration(events[e].end-events[e].start).asMinutes();
        }
      }
      var eventHours = eventDuration/60;
      var durationText = +eventHours.toFixed(2)+'h';
      jQuery('#duration').html(durationText);
    }
    
    function startIntro() {}
  </script>
</apex:define>
</apex:composition>
</apex:page>